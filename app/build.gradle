apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    dexOptions {
        javaMaxHeapSize "4g"
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.ifilmo.www.testaapdp"
        minSdkVersion project.ANDROID_BUILD_MIN_SDK_VERSION as int
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode project.VERSION_CODE as int
        versionName project.VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        jackOptions {
//            enabled true
//        }
        // If you have different applicationIds for buildTypes or productFlavors uncomment this block.
        javaCompileOptions {
            annotationProcessorOptions {
                arguments =
                        [resourcePackageName : android.defaultConfig.applicationId,
                         trace               : 'true',
                         logLevel            : 'ERROR',
                         logAppenderConsole  : 'true',
                         classSuffix         : '_',
                         generateFinalClasses: 'true'
//                         androidManifestFile : variant.outputs[0]?.processResources?.manifestFile?.absolutePath
                        ]
            }
        }
//        android.applicationVariants.all { variant ->
//            variant.variantData.variantConfiguration.javaCompileOptions.annotationProcessorOptions.arguments =
//                    ['androidManifestFile': variant.outputs[0]?.processResources?.manifestFile?.absolutePath]
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
//            signingConfig signingConfigs.release
            buildConfigField "String", "DATABASE_NAME", '"LightMessage.db"'
            manifestPlaceholders = [label      : "爱影",

            ]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".test"
            minifyEnabled false
//            signingConfig signingConfigs.debug

            buildConfigField "String", "DATABASE_NAME", '"LightMessageTest.db"'
            manifestPlaceholders = [label      : "爱影测试",

            ]

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:${SUPPORT_LIBRARY}"
    compile "com.android.support:cardview-v7:${SUPPORT_LIBRARY}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIBRARY}"
    compile "com.android.support:design:${SUPPORT_LIBRARY}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    compile 'com.github.hotchemi:permissionsdispatcher:2.4.0'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.4.0'


    compile "org.androidannotations:androidannotations-api:${ANDROIDANNOTATIONS_VERSION}"
    annotationProcessor "org.androidannotations:androidannotations:$ANDROIDANNOTATIONS_VERSION"


    compile 'com.squareup:otto:1.3.8'
    annotationProcessor "org.androidannotations:otto:${ANDROIDANNOTATIONS_VERSION}"

    compile "org.androidannotations:rest-spring-api:${ANDROIDANNOTATIONS_VERSION}"
    annotationProcessor "org.androidannotations:rest-spring:${ANDROIDANNOTATIONS_VERSION}"
    compile 'org.springframework.android:spring-android-rest-template:2.0.0.M4'

    compile "org.androidannotations:ormlite-api:${ANDROIDANNOTATIONS_VERSION}"
    annotationProcessor "org.androidannotations:ormlite:${ANDROIDANNOTATIONS_VERSION}"
    compile 'com.j256.ormlite:ormlite-android:5.0'
    compile 'com.j256.ormlite:ormlite-core:5.0'

    compile 'org.parceler:parceler-api:1.1.9'
    annotationProcessor 'org.parceler:parceler:1.1.9'

    annotationProcessor 'com.github.AleksanderMielczarek:AndroidAnnotationsPermissionsDispatcherPlugin:2.0.0'


    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'jp.wasabeef:glide-transformations:2.0.1'

    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.0'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.0'
    compile 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.0'

    compile 'com.orhanobut:logger:2.1.1'
    compile 'com.tencent.bugly:crashreport:2.6.5'

    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'

    compile 'com.leo.lu:llrecyclerview:1.0.1'
    compile 'com.leo.lu:mytitlebar:1.2.2'

    compile 'com.github.dkzwm:SmoothRefreshLayout:1.3.4'

    compile 'com.aliyun.dpa:oss-android-sdk:2.4.0@aar'


    compile 'com.meiqia:meiqiasdk:3.4.4@aar'


}
